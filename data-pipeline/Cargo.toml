[package]
  name = "data-pipeline"
  version = "0.1.0"
  edition = "2021"

  [dependencies]
  # Async runtime - the foundation for all async operations
  tokio = { version = "1.0", features = ["full"] }
  futures-util = "0.3"

  # Web framework for webhook server
  axum = "0.8.4"
  tower = "0.5.2"
  tower-http = { version = "0.6.6", features = ["cors", "trace"] }

  # Database - PostgreSQL with async support
  sqlx = { version = "0.8", features = ["runtime-tokio-rustls", "postgres", "chrono", "uuid", "json"] }

  # Redis for pub/sub
  redis = { version = "0.32.5", features = ["tokio-comp"] }

  # JSON serialization (like Python's json module)
  serde = { version = "1.0", features = ["derive"] }
  serde_json = "1.0"

  # HTTP client (like Python's requests)
  reqwest = { version = "0.12", features = ["json"] }

  # Date/time handling (like Python's datetime)
  chrono = { version = "0.4", features = ["serde"] }

  # Environment variables (like Python's os.getenv)
  dotenvy = "0.15"

  # Logging (like Python's logging)
  tracing = "0.1"
  tracing-subscriber = { version = "0.3", features = ["env-filter"] }

  # Error handling
  anyhow = "1.0"
  thiserror = "2.0.16"

  # UUID support
  uuid = { version = "1.0", features = ["v4", "serde"] }

  # Connection pooling
  deadpool-postgres = "0.14"

  [[bin]]
  name = "webhook-server"
  path = "src/bin/webhook-server.rs"

  [[bin]]
  name = "props-worker"
  path = "src/bin/props-worker.rs"

  [[bin]]
  name = "picks-worker"
  path = "src/bin/picks-worker.rs"

  [[bin]]
  name = "parlays-worker"
  path = "src/bin/parlays-worker.rs"

  [[bin]]
  name = "matches-worker"
  path = "src/bin/matches-worker.rs"